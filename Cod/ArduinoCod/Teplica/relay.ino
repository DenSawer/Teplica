void setupRelay() {
  pcf.begin();
  for (uint8_t i = 0; i < 8; i++) {
    pcf.pinMode(i, OUTPUT);
    pcf.digitalWrite(i, LOW);
  }
}

// === üí° –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ª–µ ===
void setRelay(uint8_t index, bool state) {
  if (relayState[index] != state) {
    relayState[index] = state;
    pcf.digitalWrite(index, state ? HIGH : LOW);
  }
}

// === üå± –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∫–ª–∏–º–∞—Ç-–∫–æ–Ω—Ç—Ä–æ–ª—è ===
void updateRelay() {
  uint8_t hour = 0;  // —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (—Ç–æ–ª—å–∫–æ —á–∞—Å—ã)
  struct tm timeinfo = { 0 };
  timeinfo.tm_hour = hour;

  // --- üïò –í—ã–±–æ—Ä –¥–Ω–µ–≤–Ω–æ–≥–æ –∏–ª–∏ –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ ---
  bool isDay = hour >= 8 && hour < 20;
  float T_air_min = isDay ? T_air_day_min : T_air_night_min;
  float T_air_max = isDay ? T_air_day_max : T_air_night_max;

  // --- üî• –û–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å ---
  // –í–∫–ª—é—á–∞–µ–º –µ—Å–ª–∏:
  //  - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –Ω–∏–∂–µ –¥–Ω–µ–≤–Ω–æ–≥–æ/–Ω–æ—á–Ω–æ–≥–æ –º–∏–Ω–∏–º—É–º–∞
  //  - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ—á–≤—ã –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞ –∏ –≤–æ–∑–¥—É—Ö –Ω–µ –ø–µ—Ä–µ–≥—Ä–µ—Ç
  // –í—ã–∫–ª—é—á–∞–µ–º, –µ—Å–ª–∏ –æ–±–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤ –Ω–æ—Ä–º–µ
  bool heater_on = (data.airTemp < T_air_min) || (data.soilTemp < T_soil_min && data.airTemp < T_air_max);
  bool heater_off = (data.airTemp >= T_air_min && data.soilTemp >= T_soil_off);
  setRelay(RELAY_HEATER, heater_on && !heater_off);

  // --- üí® –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä (–æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ) ---
  // –í–∫–ª—é—á–∞–µ–º –ø—Ä–∏ –ø–µ—Ä–µ–≥—Ä–µ–≤–µ –≤–æ–∑–¥—É—Ö–∞, –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–∏ —Å–ø–∞–¥–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
  bool fan_on = data.airTemp > T_air_max;
  bool fan_off = data.airTemp < T_air_cool_off;
  setRelay(RELAY_FAN, fan_on && !fan_off);

  // --- üå´ –£–≤–ª–∞–∂–Ω–∏—Ç–µ–ª—å –≤–æ–∑–¥—É—Ö–∞ ---
  // –í–∫–ª—é—á–∞–µ–º –ø—Ä–∏ –Ω–∏–∑–∫–æ–π –≤–ª–∞–∂–Ω–æ—Å—Ç–∏, –≤—ã–∫–ª—é—á–∞–µ–º –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è
  bool humid_on = data.airHum < H_air_min;
  bool humid_off = data.airHum > H_air_ok;
  setRelay(RELAY_HUMIDIFIER, humid_on && !humid_off);

  // --- üíß –ü–æ–ª–∏–≤ ---
  // –í–∫–ª—é—á–∞–µ–º –ø—Ä–∏ –ø–µ—Ä–µ—Å—É—à–∫–µ –ø–æ—á–≤—ã, –≤—ã–∫–ª—é—á–∞–µ–º –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∞–∫—Å–∏–º—É–º–∞
  bool pump_on = data.soilMois < M_soil_min;
  bool pump_off = data.soilMois > M_soil_max;
  setRelay(RELAY_PUMP, pump_on && !pump_off);

  // --- üí° –î–æ—Å–≤–µ—Ç–∫–∞ ---
  // –í–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å–≤–µ—Ç–∞ –≤ –≤–µ—á–µ—Ä–Ω–∏–µ —á–∞—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å 17 –¥–æ 20)
  bool light_time = hour >= light_start_hour && hour < light_end_hour;
  bool light_low = data.lightLevel < light_min;
  setRelay(RELAY_LIGHT, light_low && light_time);

  // --- üå¨ –í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –ø–æ CO‚ÇÇ ---
  // –í–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∏–∑–∫–æ–º —É—Ä–æ–≤–Ω–µ CO‚ÇÇ, –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
  bool vent_on = data.CO2ppm < CO2_min;
  bool vent_off = data.CO2ppm > CO2_ok;
  setRelay(RELAY_VENT_CO2, vent_on && !vent_off);
}
