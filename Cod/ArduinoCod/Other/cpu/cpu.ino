#include "esp_timer.h"
#include <DHT.h>                // DHT
#define HEAT_PIN 32           // –ü–∏–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–æ–≥—Ä–µ–≤–æ–º (–∫—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç–æ–¥–∏–æ–¥)
#define COOL_PIN 33           // –ü–∏–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ–º (—Å–∏–Ω–∏–π —Å–≤–µ—Ç–æ–¥–∏–æ–¥)
#define DHTTYPE DHT22  // –£–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π DHT
DHT dht(15, DHTTYPE);

uint64_t lastTime = 0;
uint64_t busyTime = 0;
uint64_t totalTime = 0;

void setup() {
  Serial.begin(115200);
  lastTime = esp_timer_get_time();  // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞
}

void loop() {
  uint64_t start = esp_timer_get_time();  // –ó–∞—Å–µ–∫–∞–µ–º –Ω–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è loop()

  // --- –ó–¥–µ—Å—å —Ç–≤–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ ---
  // –ß—Ç–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ —Å DHT22
  float temperature = dht.readTemperature();  // –ß—Ç–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
  float humidity = dht.readHumidity();        // –ß—Ç–µ–Ω–∏–µ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏

  bool isCool = temperature < 28.0;  // —Ö–æ–ª–æ–¥–Ω–æ –µ—Å–ª–∏ –º–µ–Ω—å—à–µ 23
  bool isHeat = temperature > 30.0;  // –∂–∞—Ä–∫–æ –µ—Å–ª–∏ –±–æ–ª—å—à–µ 24

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —É–¥–∞–ª–æ—Å—å –ª–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–∞ DHT22
  if (!isnan(humidity) && !isnan(temperature)) {
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–æ–≥—Ä–µ–≤–æ–º
    if (isCool) digitalWrite(HEAT_PIN, HIGH);  // –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–æ–≥—Ä–µ–≤
    else digitalWrite(HEAT_PIN, LOW);          // –í—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥–æ–≥—Ä–µ–≤
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ–º
    if (isHeat) digitalWrite(COOL_PIN, HIGH);  // –í–∫–ª—é—á–∏—Ç—å –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ
    else digitalWrite(COOL_PIN, LOW);          // –í—ã–∫–ª—é—á–∏—Ç—å –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ
  } else {
    Serial.println(F("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å DHT22!"));  // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
    delay(500);                                          // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    return;
  }
  delay(1000);  // –ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–±–æ—Ç–∞ –∫–æ–¥–∞
  // --------------------------------

  uint64_t end = esp_timer_get_time();  // –ó–∞—Å–µ–∫–∞–µ–º –∫–æ–Ω–µ—Ü –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è loop()

  busyTime += (end - start);  // –°—É–º–º–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è
  totalTime += (end - lastTime);
  lastTime = end;

  if (totalTime >= 1000000) {  // –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –≤—ã—á–∏—Å–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    float cpuLoad = (float)busyTime / (float)totalTime * 100.0;
    Serial.printf("üîπ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å CPU: %.2f%%\n", cpuLoad);
    busyTime = 0;  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫–∏
    totalTime = 0;
  }
}
